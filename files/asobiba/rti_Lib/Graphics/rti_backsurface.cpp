#include "StartWithExeFile.h"
#ifdef BACKSURFACE_LIFE
#include <.\Comm\rti_Comm.h>

/*****************************************************************/
/*****************************************************************/
/*                裏画面を実現するよーん                         */
/*****************************************************************/
/*****************************************************************/
#include <.\Graphics\rti_backsurface.h>
#include <.\Base\rti_debug.h>

TBacksurface *Backsurface;
BMD Sprite;

/************************************************************************************/
/************************************************************************************/
//	統合ルーチン	TBacksurface
/************************************************************************************/
/************************************************************************************/

/************************************************************************************/
//統合、作成ルーチン.
/************************************************************************************/
void TBacksurfaceComm::CommMake(HWND hwnd)
{
	//ウィンドハンドルの記録
	TBacksurfaceComm::hWnd = hwnd;
	//新規に作成します
   	Sprite = new (struct BMP_DATA_TABLE) ;//メモリ確保

	RECT rect;
	GetClientRect(hwnd, &rect);
	Sprite->w = rect.right;
	Sprite->h = rect.bottom;
	DEBUG3("裏画面サイズ %d  %d",Sprite->w,Sprite->h);

	CommDraw->GraphicsAlloc(Sprite);
	//個別作成ルーチンを呼ぶ.
	Make();
}

/************************************************************************************/
//統合削除ルーチン.
/************************************************************************************/
void TBacksurfaceComm::CommDestroy()
{
	//個別削除ルーチンを呼ぶ
	Destroy();
	//領域の削除.
	CommDraw->GraphicsFree(Sprite);
	delete Sprite;
}

/************************************************************************************/
/************************************************************************************/
//	GDIルーチン	TGDIBacksurface
/************************************************************************************/
/************************************************************************************/

void TGDIBackSurface::Catch_WM_PAINT()		//WM_PAINT のときの処理.
{
	PAINTSTRUCT ps;
    BeginPaint(hWnd,&ps);            //PAINT専用のデバコン取得
		BitBlt(ps.hdc ,0,0,
			Sprite->w,Sprite->h,
			   (HDC)(Sprite->Tag),0,0,SRCCOPY);
	                                 //メモリDCからディスプレイDCへ転送
	EndPaint(hWnd,&ps);              //WM_PAINT専用のデバコン開放
}

void TGDIBackSurface::Catch_WM_MOVE(int x,int y)		//WM_MOVE のときの処理.
{
}

/************************************************************************************/
/************************************************************************************/
//	DirectDrawルーチン	TGDIBacksurface
/************************************************************************************/
/************************************************************************************/

void TDirectDrawBackSurface::Catch_WM_PAINT()		//WM_PAINT のときの処理.
{
	PAINTSTRUCT ps;
    BeginPaint(hWnd,&ps);            //PAINT専用のデバコン取得
	EndPaint(hWnd,&ps);              //WM_PAINT専用のデバコン開放
}

void TDirectDrawBackSurface::Catch_WM_MOVE(int x,int y)		//WM_MOVE のときの処理.
{
	//絵画する位置を登録
	CommDraw->SetDrawPoint(x , y);
}

#endif //LIFE END
