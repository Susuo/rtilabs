// Created by Microsoft (R) C/C++ Compiler Version 12.00.8447.0 (854271b7).
//
// msdxm.tlh
//
// C++ source equivalent of Win32 type library C:\WINNT\System32\msdxm.ocx
// compiler-generated file created 09/23/02 at 19:47:31 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace MediaPlayer {

//
// Forward references and typedefs
//

struct __declspec(uuid("39a2c2a7-4778-11d2-9bdb-204c4f4f5020"))
/* dispinterface */ _IDirectControlEvents;
struct /* coclass */ DirectControl;
struct __declspec(uuid("39a2c2a5-4778-11d2-9bdb-204c4f4f5020"))
/* dual interface */ IDirectControl;
struct __declspec(uuid("39a2c2aa-4778-11d2-9bdb-204c4f4f5020"))
/* dispinterface */ _IDirectContainerEvents;
struct /* coclass */ DirectContainer;
struct __declspec(uuid("39a2c2a8-4778-11d2-9bdb-204c4f4f5020"))
/* interface */ IDirectContainer;
struct __declspec(uuid("847b4df6-4b61-11d2-9bdb-204c4f4f5020"))
/* dispinterface */ _IRadioViewEvents;
struct /* coclass */ RadioView;
struct __declspec(uuid("847b4df4-4b61-11d2-9bdb-204c4f4f5020"))
/* dual interface */ IRadioView;
struct __declspec(uuid("2d3a4c40-e711-11d0-94ab-0080c74c7e95"))
/* dispinterface */ _MediaPlayerEvents;
struct /* coclass */ MediaPlayer;
struct __declspec(uuid("20d4f5e0-5475-11d2-9774-0000f80855e6"))
/* dual interface */ IMediaPlayer2;
struct __declspec(uuid("22d6f311-b0f6-11d0-94ab-0080c74c7e95"))
/* dual interface */ IMediaPlayer;
typedef unsigned long VB_OLE_COLOR;
struct __declspec(uuid("746eb440-3835-11d2-9774-0000f80855e6"))
/* dual interface */ IMediaPlayerDvd;
struct __declspec(uuid("920f0de3-91c5-11d2-828f-00c04fc99d4e"))
/* dual interface */ IMediaBindStream;
struct /* coclass */ ppDShowNet;
struct /* coclass */ ppDShowPlay;
struct /* coclass */ ppDSMeta;
struct /* coclass */ ppDSCnnl;
struct /* coclass */ ppDSClip;
struct /* coclass */ ppDSDetl;
struct /* coclass */ ppDSApp;
struct /* coclass */ ppDSPropAdv;
struct /* coclass */ ppDSView;
struct /* coclass */ ppDSOAdv;
struct __declspec(uuid("3da2aa3c-3d96-11d2-9bd2-204c4f4f5020"))
/* dispinterface */ _IAsyncPProtEvents;
struct /* coclass */ AsyncPProt;
struct __declspec(uuid("3da2aa3a-3d96-11d2-9bd2-204c4f4f5020"))
/* dual interface */ IAsyncPProt;
struct /* coclass */ AsyncMHandler;
struct __declspec(uuid("3da2aa3d-3d96-11d2-9bd2-204c4f4f5020"))
/* dual interface */ IAsyncMHandler;
struct __declspec(uuid("9c2263b1-3e3c-11d2-9bd3-204c4f4f5020"))
/* dispinterface */ _IRadioPlayerEvents;
struct /* coclass */ RadioPlayer;
struct __declspec(uuid("9c2263af-3e3c-11d2-9bd3-204c4f4f5020"))
/* dual interface */ IRadioPlayer;
struct __declspec(uuid("9c2263a0-3e3c-11d2-9bd3-204c4f4f5020"))
/* dual interface */ IRadioServer;
struct /* coclass */ RadioServer;
struct __declspec(uuid("8e718889-423f-11d2-876e-00a0c9082467"))
/* dual interface */ IRadioServerControl;
struct __declspec(uuid("33222211-5e5e-11d2-9e8e-0000f8085981"))
/* interface */ IMediaPlayerListener;
struct /* coclass */ RadioBand;
struct __declspec(uuid("8e718881-423f-11d2-876e-00a0c9082467"))
/* dual interface */ IRadioBand;
struct /* coclass */ ppDSFile;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(_IDirectControlEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IDirectControl, __uuidof(IDirectControl));
_COM_SMARTPTR_TYPEDEF(_IDirectContainerEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IDirectContainer, __uuidof(IDirectContainer));
_COM_SMARTPTR_TYPEDEF(_IRadioViewEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IRadioView, __uuidof(IRadioView));
_COM_SMARTPTR_TYPEDEF(_MediaPlayerEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IMediaPlayer, __uuidof(IMediaPlayer));
_COM_SMARTPTR_TYPEDEF(IMediaPlayer2, __uuidof(IMediaPlayer2));
_COM_SMARTPTR_TYPEDEF(IMediaPlayerDvd, __uuidof(IMediaPlayerDvd));
_COM_SMARTPTR_TYPEDEF(IMediaBindStream, __uuidof(IMediaBindStream));
_COM_SMARTPTR_TYPEDEF(_IAsyncPProtEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IAsyncPProt, __uuidof(IAsyncPProt));
_COM_SMARTPTR_TYPEDEF(IAsyncMHandler, __uuidof(IAsyncMHandler));
_COM_SMARTPTR_TYPEDEF(_IRadioPlayerEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IRadioPlayer, __uuidof(IRadioPlayer));
_COM_SMARTPTR_TYPEDEF(IRadioServer, __uuidof(IRadioServer));
_COM_SMARTPTR_TYPEDEF(IRadioServerControl, __uuidof(IRadioServerControl));
_COM_SMARTPTR_TYPEDEF(IMediaPlayerListener, __uuidof(IMediaPlayerListener));
_COM_SMARTPTR_TYPEDEF(IRadioBand, __uuidof(IRadioBand));

//
// Type library items
//

struct __declspec(uuid("39a2c2a7-4778-11d2-9bdb-204c4f4f5020"))
_IDirectControlEvents : IDispatch
{};

struct __declspec(uuid("39a2c2a6-4778-11d2-9bdb-204c4f4f5020"))
DirectControl;
    // [ default ] interface IDirectControl
    // [ default, source ] dispinterface _IDirectControlEvents

struct __declspec(uuid("39a2c2a5-4778-11d2-9bdb-204c4f4f5020"))
IDirectControl : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall CreateView (
        BSTR bszClsid ) = 0;
    virtual HRESULT __stdcall DestroyAllViews ( ) = 0;
};

struct __declspec(uuid("39a2c2aa-4778-11d2-9bdb-204c4f4f5020"))
_IDirectContainerEvents : IDispatch
{};

struct __declspec(uuid("39a2c2a9-4778-11d2-9bdb-204c4f4f5020"))
DirectContainer;
    // [ default ] interface IDirectContainer
    // [ default, source ] dispinterface _IDirectContainerEvents

struct __declspec(uuid("39a2c2a8-4778-11d2-9bdb-204c4f4f5020"))
IDirectContainer : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall CreateControl (
        BSTR bszClsid,
        unsigned long dwClsContext,
        IUnknown * * ppunk,
        unsigned long dwWindowStyle ) = 0;
    virtual HRESULT __stdcall SetServiceProvider (
        struct IServiceProvider * pspSet ) = 0;
    virtual HRESULT __stdcall SetIInputObjectSite (
        IUnknown * pios ) = 0;
    virtual HRESULT __stdcall ShowControl ( ) = 0;
    virtual HRESULT __stdcall HideControl ( ) = 0;
    virtual HRESULT __stdcall IsControlCreated ( ) = 0;
    virtual HRESULT __stdcall DestroyControl ( ) = 0;
};

struct __declspec(uuid("847b4df6-4b61-11d2-9bdb-204c4f4f5020"))
_IRadioViewEvents : IDispatch
{};

struct __declspec(uuid("847b4df5-4b61-11d2-9bdb-204c4f4f5020"))
RadioView;
    // [ default ] interface IRadioView
    // [ default, source ] dispinterface _IRadioViewEvents

struct __declspec(uuid("847b4df4-4b61-11d2-9bdb-204c4f4f5020"))
IRadioView : IDispatch
{};

struct __declspec(uuid("2d3a4c40-e711-11d0-94ab-0080c74c7e95"))
_MediaPlayerEvents : IDispatch
{};

enum ReadyStateConstants
{
    amvUninitialized = 0,
    amvLoading = 1,
    amvInteractive = 3,
    amvComplete = 4
};

struct __declspec(uuid("22d6f312-b0f6-11d0-94ab-0080c74c7e95"))
MediaPlayer;
    // [ default ] interface IMediaPlayer2
    // [ default, source ] dispinterface _MediaPlayerEvents
    // interface IMediaBindStream

struct __declspec(uuid("22d6f311-b0f6-11d0-94ab-0080c74c7e95"))
IMediaPlayer : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_CurrentPosition (
        double * pCurrentPosition ) = 0;
    virtual HRESULT __stdcall put_CurrentPosition (
        double pCurrentPosition ) = 0;
    virtual HRESULT __stdcall get_Duration (
        double * pDuration ) = 0;
    virtual HRESULT __stdcall get_ImageSourceWidth (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall get_ImageSourceHeight (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall get_MarkerCount (
        long * pMarkerCount ) = 0;
    virtual HRESULT __stdcall get_CanScan (
        VARIANT_BOOL * pCanScan ) = 0;
    virtual HRESULT __stdcall get_CanSeek (
        VARIANT_BOOL * pCanSeek ) = 0;
    virtual HRESULT __stdcall get_CanSeekToMarkers (
        VARIANT_BOOL * pCanSeekToMarkers ) = 0;
    virtual HRESULT __stdcall get_CurrentMarker (
        long * pCurrentMarker ) = 0;
    virtual HRESULT __stdcall put_CurrentMarker (
        long pCurrentMarker ) = 0;
    virtual HRESULT __stdcall get_FileName (
        BSTR * pbstrFileName ) = 0;
    virtual HRESULT __stdcall put_FileName (
        BSTR pbstrFileName ) = 0;
    virtual HRESULT __stdcall get_SourceLink (
        BSTR * pbstrSourceLink ) = 0;
    virtual HRESULT __stdcall get_CreationDate (
        DATE * pCreationDate ) = 0;
    virtual HRESULT __stdcall get_ErrorCorrection (
        BSTR * pbstrErrorCorrection ) = 0;
    virtual HRESULT __stdcall get_Bandwidth (
        long * pBandwidth ) = 0;
    virtual HRESULT __stdcall get_SourceProtocol (
        long * pSourceProtocol ) = 0;
    virtual HRESULT __stdcall get_ReceivedPackets (
        long * pReceivedPackets ) = 0;
    virtual HRESULT __stdcall get_RecoveredPackets (
        long * pRecoveredPackets ) = 0;
    virtual HRESULT __stdcall get_LostPackets (
        long * pLostPackets ) = 0;
    virtual HRESULT __stdcall get_ReceptionQuality (
        long * pReceptionQuality ) = 0;
    virtual HRESULT __stdcall get_BufferingCount (
        long * pBufferingCount ) = 0;
    virtual HRESULT __stdcall get_IsBroadcast (
        VARIANT_BOOL * pIsBroadcast ) = 0;
    virtual HRESULT __stdcall get_BufferingProgress (
        long * pBufferingProgress ) = 0;
    virtual HRESULT __stdcall get_ChannelName (
        BSTR * pbstrChannelName ) = 0;
    virtual HRESULT __stdcall get_ChannelDescription (
        BSTR * pbstrChannelDescription ) = 0;
    virtual HRESULT __stdcall get_ChannelURL (
        BSTR * pbstrChannelURL ) = 0;
    virtual HRESULT __stdcall get_ContactAddress (
        BSTR * pbstrContactAddress ) = 0;
    virtual HRESULT __stdcall get_ContactPhone (
        BSTR * pbstrContactPhone ) = 0;
    virtual HRESULT __stdcall get_ContactEmail (
        BSTR * pbstrContactEmail ) = 0;
    virtual HRESULT __stdcall get_BufferingTime (
        double * pBufferingTime ) = 0;
    virtual HRESULT __stdcall put_BufferingTime (
        double pBufferingTime ) = 0;
    virtual HRESULT __stdcall get_AutoStart (
        VARIANT_BOOL * pAutoStart ) = 0;
    virtual HRESULT __stdcall put_AutoStart (
        VARIANT_BOOL pAutoStart ) = 0;
    virtual HRESULT __stdcall get_AutoRewind (
        VARIANT_BOOL * pAutoRewind ) = 0;
    virtual HRESULT __stdcall put_AutoRewind (
        VARIANT_BOOL pAutoRewind ) = 0;
    virtual HRESULT __stdcall get_Rate (
        double * pRate ) = 0;
    virtual HRESULT __stdcall put_Rate (
        double pRate ) = 0;
    virtual HRESULT __stdcall get_SendKeyboardEvents (
        VARIANT_BOOL * pSendKeyboardEvents ) = 0;
    virtual HRESULT __stdcall put_SendKeyboardEvents (
        VARIANT_BOOL pSendKeyboardEvents ) = 0;
    virtual HRESULT __stdcall get_SendMouseClickEvents (
        VARIANT_BOOL * pSendMouseClickEvents ) = 0;
    virtual HRESULT __stdcall put_SendMouseClickEvents (
        VARIANT_BOOL pSendMouseClickEvents ) = 0;
    virtual HRESULT __stdcall get_SendMouseMoveEvents (
        VARIANT_BOOL * pSendMouseMoveEvents ) = 0;
    virtual HRESULT __stdcall put_SendMouseMoveEvents (
        VARIANT_BOOL pSendMouseMoveEvents ) = 0;
    virtual HRESULT __stdcall get_PlayCount (
        long * pPlayCount ) = 0;
    virtual HRESULT __stdcall put_PlayCount (
        long pPlayCount ) = 0;
    virtual HRESULT __stdcall get_ClickToPlay (
        VARIANT_BOOL * pClickToPlay ) = 0;
    virtual HRESULT __stdcall put_ClickToPlay (
        VARIANT_BOOL pClickToPlay ) = 0;
    virtual HRESULT __stdcall get_AllowScan (
        VARIANT_BOOL * pAllowScan ) = 0;
    virtual HRESULT __stdcall put_AllowScan (
        VARIANT_BOOL pAllowScan ) = 0;
    virtual HRESULT __stdcall get_EnableContextMenu (
        VARIANT_BOOL * pEnableContextMenu ) = 0;
    virtual HRESULT __stdcall put_EnableContextMenu (
        VARIANT_BOOL pEnableContextMenu ) = 0;
    virtual HRESULT __stdcall get_CursorType (
        long * pCursorType ) = 0;
    virtual HRESULT __stdcall put_CursorType (
        long pCursorType ) = 0;
    virtual HRESULT __stdcall get_CodecCount (
        long * pCodecCount ) = 0;
    virtual HRESULT __stdcall get_AllowChangeDisplaySize (
        VARIANT_BOOL * pAllowChangeDisplaySize ) = 0;
    virtual HRESULT __stdcall put_AllowChangeDisplaySize (
        VARIANT_BOOL pAllowChangeDisplaySize ) = 0;
    virtual HRESULT __stdcall get_IsDurationValid (
        VARIANT_BOOL * pIsDurationValid ) = 0;
    virtual HRESULT __stdcall get_OpenState (
        long * pOpenState ) = 0;
    virtual HRESULT __stdcall get_SendOpenStateChangeEvents (
        VARIANT_BOOL * pSendOpenStateChangeEvents ) = 0;
    virtual HRESULT __stdcall put_SendOpenStateChangeEvents (
        VARIANT_BOOL pSendOpenStateChangeEvents ) = 0;
    virtual HRESULT __stdcall get_SendWarningEvents (
        VARIANT_BOOL * pSendWarningEvents ) = 0;
    virtual HRESULT __stdcall put_SendWarningEvents (
        VARIANT_BOOL pSendWarningEvents ) = 0;
    virtual HRESULT __stdcall get_SendErrorEvents (
        VARIANT_BOOL * pSendErrorEvents ) = 0;
    virtual HRESULT __stdcall put_SendErrorEvents (
        VARIANT_BOOL pSendErrorEvents ) = 0;
    virtual HRESULT __stdcall get_PlayState (
        enum MPPlayStateConstants * pPlayState ) = 0;
    virtual HRESULT __stdcall get_SendPlayStateChangeEvents (
        VARIANT_BOOL * pSendPlayStateChangeEvents ) = 0;
    virtual HRESULT __stdcall put_SendPlayStateChangeEvents (
        VARIANT_BOOL pSendPlayStateChangeEvents ) = 0;
    virtual HRESULT __stdcall get_DisplaySize (
        enum MPDisplaySizeConstants * pDisplaySize ) = 0;
    virtual HRESULT __stdcall put_DisplaySize (
        enum MPDisplaySizeConstants pDisplaySize ) = 0;
    virtual HRESULT __stdcall get_InvokeURLs (
        VARIANT_BOOL * pInvokeURLs ) = 0;
    virtual HRESULT __stdcall put_InvokeURLs (
        VARIANT_BOOL pInvokeURLs ) = 0;
    virtual HRESULT __stdcall get_BaseURL (
        BSTR * pbstrBaseURL ) = 0;
    virtual HRESULT __stdcall put_BaseURL (
        BSTR pbstrBaseURL ) = 0;
    virtual HRESULT __stdcall get_DefaultFrame (
        BSTR * pbstrDefaultFrame ) = 0;
    virtual HRESULT __stdcall put_DefaultFrame (
        BSTR pbstrDefaultFrame ) = 0;
    virtual HRESULT __stdcall get_HasError (
        VARIANT_BOOL * pHasError ) = 0;
    virtual HRESULT __stdcall get_ErrorDescription (
        BSTR * pbstrErrorDescription ) = 0;
    virtual HRESULT __stdcall get_ErrorCode (
        long * pErrorCode ) = 0;
    virtual HRESULT __stdcall get_AnimationAtStart (
        VARIANT_BOOL * pAnimationAtStart ) = 0;
    virtual HRESULT __stdcall put_AnimationAtStart (
        VARIANT_BOOL pAnimationAtStart ) = 0;
    virtual HRESULT __stdcall get_TransparentAtStart (
        VARIANT_BOOL * pTransparentAtStart ) = 0;
    virtual HRESULT __stdcall put_TransparentAtStart (
        VARIANT_BOOL pTransparentAtStart ) = 0;
    virtual HRESULT __stdcall get_Volume (
        long * pVolume ) = 0;
    virtual HRESULT __stdcall put_Volume (
        long pVolume ) = 0;
    virtual HRESULT __stdcall get_Balance (
        long * pBalance ) = 0;
    virtual HRESULT __stdcall put_Balance (
        long pBalance ) = 0;
    virtual HRESULT __stdcall get_ReadyState (
        enum MPReadyStateConstants * pValue ) = 0;
    virtual HRESULT __stdcall get_SelectionStart (
        double * pValue ) = 0;
    virtual HRESULT __stdcall put_SelectionStart (
        double pValue ) = 0;
    virtual HRESULT __stdcall get_SelectionEnd (
        double * pValue ) = 0;
    virtual HRESULT __stdcall put_SelectionEnd (
        double pValue ) = 0;
    virtual HRESULT __stdcall get_ShowDisplay (
        VARIANT_BOOL * Show ) = 0;
    virtual HRESULT __stdcall put_ShowDisplay (
        VARIANT_BOOL Show ) = 0;
    virtual HRESULT __stdcall get_ShowControls (
        VARIANT_BOOL * Show ) = 0;
    virtual HRESULT __stdcall put_ShowControls (
        VARIANT_BOOL Show ) = 0;
    virtual HRESULT __stdcall get_ShowPositionControls (
        VARIANT_BOOL * Show ) = 0;
    virtual HRESULT __stdcall put_ShowPositionControls (
        VARIANT_BOOL Show ) = 0;
    virtual HRESULT __stdcall get_ShowTracker (
        VARIANT_BOOL * Show ) = 0;
    virtual HRESULT __stdcall put_ShowTracker (
        VARIANT_BOOL Show ) = 0;
    virtual HRESULT __stdcall get_EnablePositionControls (
        VARIANT_BOOL * Enable ) = 0;
    virtual HRESULT __stdcall put_EnablePositionControls (
        VARIANT_BOOL Enable ) = 0;
    virtual HRESULT __stdcall get_EnableTracker (
        VARIANT_BOOL * Enable ) = 0;
    virtual HRESULT __stdcall put_EnableTracker (
        VARIANT_BOOL Enable ) = 0;
    virtual HRESULT __stdcall get_Enabled (
        VARIANT_BOOL * pEnabled ) = 0;
    virtual HRESULT __stdcall put_Enabled (
        VARIANT_BOOL pEnabled ) = 0;
    virtual HRESULT __stdcall get_DisplayForeColor (
        VB_OLE_COLOR * ForeColor ) = 0;
    virtual HRESULT __stdcall put_DisplayForeColor (
        VB_OLE_COLOR ForeColor ) = 0;
    virtual HRESULT __stdcall get_DisplayBackColor (
        VB_OLE_COLOR * BackColor ) = 0;
    virtual HRESULT __stdcall put_DisplayBackColor (
        VB_OLE_COLOR BackColor ) = 0;
    virtual HRESULT __stdcall get_DisplayMode (
        enum MPDisplayModeConstants * pValue ) = 0;
    virtual HRESULT __stdcall put_DisplayMode (
        enum MPDisplayModeConstants pValue ) = 0;
    virtual HRESULT __stdcall get_VideoBorder3D (
        VARIANT_BOOL * pVideoBorderWidth ) = 0;
    virtual HRESULT __stdcall put_VideoBorder3D (
        VARIANT_BOOL pVideoBorderWidth ) = 0;
    virtual HRESULT __stdcall get_VideoBorderWidth (
        long * pVideoBorderWidth ) = 0;
    virtual HRESULT __stdcall put_VideoBorderWidth (
        long pVideoBorderWidth ) = 0;
    virtual HRESULT __stdcall get_VideoBorderColor (
        VB_OLE_COLOR * pVideoBorderWidth ) = 0;
    virtual HRESULT __stdcall put_VideoBorderColor (
        VB_OLE_COLOR pVideoBorderWidth ) = 0;
    virtual HRESULT __stdcall get_ShowGotoBar (
        VARIANT_BOOL * pbool ) = 0;
    virtual HRESULT __stdcall put_ShowGotoBar (
        VARIANT_BOOL pbool ) = 0;
    virtual HRESULT __stdcall get_ShowStatusBar (
        VARIANT_BOOL * pbool ) = 0;
    virtual HRESULT __stdcall put_ShowStatusBar (
        VARIANT_BOOL pbool ) = 0;
    virtual HRESULT __stdcall get_ShowCaptioning (
        VARIANT_BOOL * pbool ) = 0;
    virtual HRESULT __stdcall put_ShowCaptioning (
        VARIANT_BOOL pbool ) = 0;
    virtual HRESULT __stdcall get_ShowAudioControls (
        VARIANT_BOOL * pbool ) = 0;
    virtual HRESULT __stdcall put_ShowAudioControls (
        VARIANT_BOOL pbool ) = 0;
    virtual HRESULT __stdcall get_CaptioningID (
        BSTR * pstrText ) = 0;
    virtual HRESULT __stdcall put_CaptioningID (
        BSTR pstrText ) = 0;
    virtual HRESULT __stdcall get_Mute (
        VARIANT_BOOL * vbool ) = 0;
    virtual HRESULT __stdcall put_Mute (
        VARIANT_BOOL vbool ) = 0;
    virtual HRESULT __stdcall get_CanPreview (
        VARIANT_BOOL * pCanPreview ) = 0;
    virtual HRESULT __stdcall get_PreviewMode (
        VARIANT_BOOL * pPreviewMode ) = 0;
    virtual HRESULT __stdcall put_PreviewMode (
        VARIANT_BOOL pPreviewMode ) = 0;
    virtual HRESULT __stdcall get_HasMultipleItems (
        VARIANT_BOOL * pHasMuliItems ) = 0;
    virtual HRESULT __stdcall get_Language (
        long * pLanguage ) = 0;
    virtual HRESULT __stdcall put_Language (
        long pLanguage ) = 0;
    virtual HRESULT __stdcall get_AudioStream (
        long * pStream ) = 0;
    virtual HRESULT __stdcall put_AudioStream (
        long pStream ) = 0;
    virtual HRESULT __stdcall get_SAMIStyle (
        BSTR * pbstrStyle ) = 0;
    virtual HRESULT __stdcall put_SAMIStyle (
        BSTR pbstrStyle ) = 0;
    virtual HRESULT __stdcall get_SAMILang (
        BSTR * pbstrLang ) = 0;
    virtual HRESULT __stdcall put_SAMILang (
        BSTR pbstrLang ) = 0;
    virtual HRESULT __stdcall get_SAMIFileName (
        BSTR * pbstrFileName ) = 0;
    virtual HRESULT __stdcall put_SAMIFileName (
        BSTR pbstrFileName ) = 0;
    virtual HRESULT __stdcall get_StreamCount (
        long * pStreamCount ) = 0;
    virtual HRESULT __stdcall get_ClientId (
        BSTR * pbstrClientId ) = 0;
    virtual HRESULT __stdcall get_ConnectionSpeed (
        long * plConnectionSpeed ) = 0;
    virtual HRESULT __stdcall get_AutoSize (
        VARIANT_BOOL * pbool ) = 0;
    virtual HRESULT __stdcall put_AutoSize (
        VARIANT_BOOL pbool ) = 0;
    virtual HRESULT __stdcall get_EnableFullScreenControls (
        VARIANT_BOOL * pbVal ) = 0;
    virtual HRESULT __stdcall put_EnableFullScreenControls (
        VARIANT_BOOL pbVal ) = 0;
    virtual HRESULT __stdcall get_ActiveMovie (
        IDispatch * * ppdispatch ) = 0;
    virtual HRESULT __stdcall get_NSPlay (
        IDispatch * * ppdispatch ) = 0;
    virtual HRESULT __stdcall get_WindowlessVideo (
        VARIANT_BOOL * pbool ) = 0;
    virtual HRESULT __stdcall put_WindowlessVideo (
        VARIANT_BOOL pbool ) = 0;
    virtual HRESULT __stdcall Play ( ) = 0;
    virtual HRESULT __stdcall Stop ( ) = 0;
    virtual HRESULT __stdcall Pause ( ) = 0;
    virtual HRESULT __stdcall GetMarkerTime (
        long MarkerNum,
        double * pMarkerTime ) = 0;
    virtual HRESULT __stdcall GetMarkerName (
        long MarkerNum,
        BSTR * pbstrMarkerName ) = 0;
    virtual HRESULT __stdcall AboutBox ( ) = 0;
    virtual HRESULT __stdcall GetCodecInstalled (
        long CodecNum,
        VARIANT_BOOL * pCodecInstalled ) = 0;
    virtual HRESULT __stdcall GetCodecDescription (
        long CodecNum,
        BSTR * pbstrCodecDescription ) = 0;
    virtual HRESULT __stdcall GetCodecURL (
        long CodecNum,
        BSTR * pbstrCodecURL ) = 0;
    virtual HRESULT __stdcall GetMoreInfoURL (
        enum MPMoreInfoType MoreInfoType,
        BSTR * pbstrMoreInfoURL ) = 0;
    virtual HRESULT __stdcall GetMediaInfoString (
        enum MPMediaInfoType MediaInfoType,
        BSTR * pbstrMediaInfo ) = 0;
    virtual HRESULT __stdcall Cancel ( ) = 0;
    virtual HRESULT __stdcall Open (
        BSTR bstrFileName ) = 0;
    virtual HRESULT __stdcall IsSoundCardEnabled (
        VARIANT_BOOL * pbSoundCard ) = 0;
    virtual HRESULT __stdcall Next ( ) = 0;
    virtual HRESULT __stdcall Previous ( ) = 0;
    virtual HRESULT __stdcall StreamSelect (
        long StreamNum ) = 0;
    virtual HRESULT __stdcall FastForward ( ) = 0;
    virtual HRESULT __stdcall FastReverse ( ) = 0;
    virtual HRESULT __stdcall GetStreamName (
        long StreamNum,
        BSTR * pbstrStreamName ) = 0;
    virtual HRESULT __stdcall GetStreamGroup (
        long StreamNum,
        long * pStreamGroup ) = 0;
    virtual HRESULT __stdcall GetStreamSelected (
        long StreamNum,
        VARIANT_BOOL * pStreamSelected ) = 0;
};

struct __declspec(uuid("20d4f5e0-5475-11d2-9774-0000f80855e6"))
IMediaPlayer2 : IMediaPlayer
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_DVD (
        struct IMediaPlayerDvd * * ppdispatch ) = 0;
    virtual HRESULT __stdcall GetMediaParameter (
        long EntryNum,
        BSTR bstrParameterName,
        BSTR * pbstrParameterValue ) = 0;
    virtual HRESULT __stdcall GetMediaParameterName (
        long EntryNum,
        long Index,
        BSTR * pbstrParameterName ) = 0;
    virtual HRESULT __stdcall get_EntryCount (
        long * pNumberEntries ) = 0;
    virtual HRESULT __stdcall GetCurrentEntry (
        long * pEntryNumber ) = 0;
    virtual HRESULT __stdcall SetCurrentEntry (
        long EntryNumber ) = 0;
    virtual HRESULT __stdcall ShowDialog (
        enum MPShowDialogConstants mpDialogIndex ) = 0;
};

enum MPPlayStateConstants
{
    mpStopped = 0,
    mpPaused = 1,
    mpPlaying = 2,
    mpWaiting = 3,
    mpScanForward = 4,
    mpScanReverse = 5,
    mpClosed = 6
};

enum MPDisplaySizeConstants
{
    mpDefaultSize = 0,
    mpHalfSize = 1,
    mpDoubleSize = 2,
    mpFullScreen = 3,
    mpFitToSize = 4,
    mpOneSixteenthScreen = 5,
    mpOneFourthScreen = 6,
    mpOneHalfScreen = 7
};

enum MPReadyStateConstants
{
    mpReadyStateUninitialized = 0,
    mpReadyStateLoading = 1,
    mpReadyStateInteractive = 3,
    mpReadyStateComplete = 4
};

enum MPDisplayModeConstants
{
    mpTime = 0,
    mpFrames = 1
};

enum MPMoreInfoType
{
    mpShowURL = 0,
    mpClipURL = 1,
    mpBannerURL = 2
};

enum MPMediaInfoType
{
    mpShowFilename = 0,
    mpShowTitle = 1,
    mpShowAuthor = 2,
    mpShowCopyright = 3,
    mpShowRating = 4,
    mpShowDescription = 5,
    mpShowLogoIcon = 6,
    mpClipFilename = 7,
    mpClipTitle = 8,
    mpClipAuthor = 9,
    mpClipCopyright = 10,
    mpClipRating = 11,
    mpClipDescription = 12,
    mpClipLogoIcon = 13,
    mpBannerImage = 14,
    mpBannerMoreInfo = 15,
    mpWatermark = 16
};

struct __declspec(uuid("746eb440-3835-11d2-9774-0000f80855e6"))
IMediaPlayerDvd : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall ButtonSelectAndActivate (
        unsigned long uiButton ) = 0;
    virtual HRESULT __stdcall UpperButtonSelect ( ) = 0;
    virtual HRESULT __stdcall LowerButtonSelect ( ) = 0;
    virtual HRESULT __stdcall LeftButtonSelect ( ) = 0;
    virtual HRESULT __stdcall RightButtonSelect ( ) = 0;
    virtual HRESULT __stdcall ButtonActivate ( ) = 0;
    virtual HRESULT __stdcall ForwardScan (
        double dwSpeed ) = 0;
    virtual HRESULT __stdcall BackwardScan (
        double dwSpeed ) = 0;
    virtual HRESULT __stdcall PrevPGSearch ( ) = 0;
    virtual HRESULT __stdcall TopPGSearch ( ) = 0;
    virtual HRESULT __stdcall NextPGSearch ( ) = 0;
    virtual HRESULT __stdcall TitlePlay (
        unsigned long uiTitle ) = 0;
    virtual HRESULT __stdcall ChapterPlay (
        unsigned long uiTitle,
        unsigned long uiChapter ) = 0;
    virtual HRESULT __stdcall ChapterSearch (
        unsigned long Chapter ) = 0;
    virtual HRESULT __stdcall MenuCall (
        enum DVDMenuIDConstants MenuID ) = 0;
    virtual HRESULT __stdcall ResumeFromMenu ( ) = 0;
    virtual HRESULT __stdcall TimePlay (
        unsigned long uiTitle,
        BSTR bstrTime ) = 0;
    virtual HRESULT __stdcall TimeSearch (
        BSTR bstrTime ) = 0;
    virtual HRESULT __stdcall ChapterPlayAutoStop (
        unsigned long ulTitle,
        unsigned long ulChapter,
        unsigned long ulChaptersToPlay ) = 0;
    virtual HRESULT __stdcall StillOff ( ) = 0;
    virtual HRESULT __stdcall GoUp ( ) = 0;
    virtual HRESULT __stdcall get_TotalTitleTime (
        BSTR * bstrTime ) = 0;
    virtual HRESULT __stdcall GetNumberOfChapters (
        unsigned long ulTitle,
        unsigned long * ulNumChapters ) = 0;
    virtual HRESULT __stdcall GetAudioLanguage (
        unsigned long ulStream,
        BSTR * bstrAudioLang ) = 0;
    virtual HRESULT __stdcall GetSubpictureLanguage (
        unsigned long ulStream,
        BSTR * bstrSubpictureLang ) = 0;
    virtual HRESULT __stdcall GetAllGPRMs (
        VARIANT * vtGPRM ) = 0;
    virtual HRESULT __stdcall GetAllSPRMs (
        VARIANT * vtSPRM ) = 0;
    virtual HRESULT __stdcall UOPValid (
        unsigned long ulUOP,
        VARIANT_BOOL * bValid ) = 0;
    virtual HRESULT __stdcall get_ButtonsAvailable (
        unsigned long * ulButtonsAvailable ) = 0;
    virtual HRESULT __stdcall get_CurrentButton (
        unsigned long * ulCurrentButton ) = 0;
    virtual HRESULT __stdcall get_AudioStreamsAvailable (
        unsigned long * ulAudioStreamsAvailable ) = 0;
    virtual HRESULT __stdcall get_CurrentAudioStream (
        unsigned long * ulAudioStream ) = 0;
    virtual HRESULT __stdcall put_CurrentAudioStream (
        unsigned long ulAudioStream ) = 0;
    virtual HRESULT __stdcall get_CurrentSubpictureStream (
        unsigned long * ulSubpictureStream ) = 0;
    virtual HRESULT __stdcall put_CurrentSubpictureStream (
        unsigned long ulSubpictureStream ) = 0;
    virtual HRESULT __stdcall get_SubpictureStreamsAvailable (
        unsigned long * ulNumSubpictureStreams ) = 0;
    virtual HRESULT __stdcall get_SubpictureOn (
        VARIANT_BOOL * bSubpictureON ) = 0;
    virtual HRESULT __stdcall put_SubpictureOn (
        VARIANT_BOOL bSubpictureON ) = 0;
    virtual HRESULT __stdcall get_AnglesAvailable (
        unsigned long * ulAnglesAvailable ) = 0;
    virtual HRESULT __stdcall get_CurrentAngle (
        unsigned long * ulAngle ) = 0;
    virtual HRESULT __stdcall put_CurrentAngle (
        unsigned long ulAngle ) = 0;
    virtual HRESULT __stdcall get_CurrentTitle (
        unsigned long * ulTitle ) = 0;
    virtual HRESULT __stdcall get_CurrentChapter (
        unsigned long * ulChapter ) = 0;
    virtual HRESULT __stdcall get_CurrentTime (
        BSTR * bstrTime ) = 0;
    virtual HRESULT __stdcall put_Root (
        BSTR pbstrPath ) = 0;
    virtual HRESULT __stdcall get_Root (
        BSTR * pbstrPath ) = 0;
    virtual HRESULT __stdcall get_FramesPerSecond (
        unsigned long * ulFps ) = 0;
    virtual HRESULT __stdcall get_CurrentDomain (
        unsigned long * ulDomain ) = 0;
    virtual HRESULT __stdcall get_TitlesAvailable (
        unsigned long * ulTitles ) = 0;
    virtual HRESULT __stdcall get_VolumesAvailable (
        unsigned long * pulVolumes ) = 0;
    virtual HRESULT __stdcall get_CurrentVolume (
        unsigned long * pulVolume ) = 0;
    virtual HRESULT __stdcall get_CurrentDiscSide (
        unsigned long * pulDiscSide ) = 0;
    virtual HRESULT __stdcall get_CCActive (
        VARIANT_BOOL * bCCActive ) = 0;
    virtual HRESULT __stdcall put_CCActive (
        VARIANT_BOOL bCCActive ) = 0;
    virtual HRESULT __stdcall get_CurrentCCService (
        unsigned long * pulService ) = 0;
    virtual HRESULT __stdcall put_CurrentCCService (
        unsigned long pulService ) = 0;
    virtual HRESULT __stdcall get_UniqueID (
        BSTR * pvtUniqueID ) = 0;
    virtual HRESULT __stdcall get_ColorKey (
        unsigned long * pClr ) = 0;
    virtual HRESULT __stdcall put_ColorKey (
        unsigned long pClr ) = 0;
};

enum DVDMenuIDConstants
{
    dvdMenu_Title = 2,
    dvdMenu_Root = 3,
    dvdMenu_Subpicture = 4,
    dvdMenu_Audio = 5,
    dvdMenu_Angle = 6,
    dvdMenu_Chapter = 7
};

enum MPShowDialogConstants
{
    mpShowDialogHelp = 0,
    mpShowDialogStatistics = 1,
    mpShowDialogOptions = 2,
    mpShowDialogContextMenu = 3
};

struct __declspec(uuid("920f0de3-91c5-11d2-828f-00c04fc99d4e"))
IMediaBindStream : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall LoadMoniker (
        BSTR bszTransferContext,
        BSTR bszUrl ) = 0;
};

struct __declspec(uuid("5c85dcb0-f967-11d0-81ed-00c04fc99d4c"))
ppDShowNet;
    // [ default ] interface IUnknown

struct __declspec(uuid("c0cd59ae-020d-11d1-81f2-00c04fc99d4c"))
ppDShowPlay;
    // [ default ] interface IUnknown

struct __declspec(uuid("2feb9591-50cf-11d1-a6df-006097c4e476"))
ppDSMeta;
    // [ default ] interface IUnknown

struct __declspec(uuid("bb314f91-a010-11d1-a75a-006097c4e476"))
ppDSCnnl;
    // [ default ] interface IUnknown

struct __declspec(uuid("31c48c31-70b0-11d1-a708-006097c4e476"))
ppDSClip;
    // [ default ] interface IUnknown

struct __declspec(uuid("31c48c32-70b0-11d1-a708-006097c4e476"))
ppDSDetl;
    // [ default ] interface IUnknown

struct __declspec(uuid("2afa62e2-5548-11d1-a6e1-006097c4e476"))
ppDSApp;
    // [ default ] interface IUnknown

struct __declspec(uuid("8c4eb103-516f-11d1-a6df-006097c4e476"))
ppDSPropAdv;
    // [ default ] interface IUnknown

struct __declspec(uuid("ae1a5812-5230-11d1-a6e0-006097c4e476"))
ppDSView;
    // [ default ] interface IUnknown

struct __declspec(uuid("ae1a5813-5230-11d1-a6e0-006097c4e476"))
ppDSOAdv;
    // [ default ] interface IUnknown

struct __declspec(uuid("3da2aa3c-3d96-11d2-9bd2-204c4f4f5020"))
_IAsyncPProtEvents : IDispatch
{};

struct __declspec(uuid("3da2aa3b-3d96-11d2-9bd2-204c4f4f5020"))
AsyncPProt;
    // [ default ] interface IAsyncPProt
    // [ default, source ] dispinterface _IAsyncPProtEvents

struct __declspec(uuid("3da2aa3a-3d96-11d2-9bd2-204c4f4f5020"))
IAsyncPProt : IDispatch
{};

struct __declspec(uuid("3da2aa3e-3d96-11d2-9bd2-204c4f4f5020"))
AsyncMHandler;
    // [ default ] interface IAsyncMHandler

struct __declspec(uuid("3da2aa3d-3d96-11d2-9bd2-204c4f4f5020"))
IAsyncMHandler : IDispatch
{};

struct __declspec(uuid("9c2263b1-3e3c-11d2-9bd3-204c4f4f5020"))
_IRadioPlayerEvents : IDispatch
{};

struct __declspec(uuid("9c2263b0-3e3c-11d2-9bd3-204c4f4f5020"))
RadioPlayer;
    // [ default ] interface IRadioPlayer
    // interface IRadioServer
    // [ default, source ] dispinterface _IRadioPlayerEvents

struct __declspec(uuid("9c2263af-3e3c-11d2-9bd3-204c4f4f5020"))
IRadioPlayer : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall BindRadioMemory ( ) = 0;
    virtual HRESULT __stdcall ReleaseRadio ( ) = 0;
    virtual HRESULT __stdcall RegisterEvent (
        BSTR bszEvent,
        long * plRegister ) = 0;
    virtual HRESULT __stdcall RegisterWindow (
        long __MIDL_0012,
        unsigned long dwMessage,
        unsigned long dwCodeSet,
        long * plRegister ) = 0;
    virtual HRESULT __stdcall GetSection (
        BSTR * bszSection ) = 0;
    virtual HRESULT __stdcall Unregister (
        long lRegister ) = 0;
    virtual HRESULT __stdcall GetInstanceCount (
        long * plInstances ) = 0;
    virtual HRESULT __stdcall Play ( ) = 0;
    virtual HRESULT __stdcall Stop ( ) = 0;
    virtual HRESULT __stdcall put_Url (
        BSTR _arg1 ) = 0;
    virtual HRESULT __stdcall put_Volume (
        long _arg1 ) = 0;
    virtual HRESULT __stdcall put_Mute (
        VARIANT_BOOL _arg1 ) = 0;
    virtual HRESULT __stdcall GetStatus (
        long * plVolume,
        long * pfMute,
        long * pfPlay,
        BSTR * __MIDL_0013,
        BSTR * __MIDL_0014,
        BSTR * __MIDL_0015,
        BSTR * __MIDL_0016,
        BSTR * __MIDL_0017,
        BSTR * __MIDL_0018,
        BSTR * __MIDL_0019 ) = 0;
    virtual HRESULT __stdcall GetState (
        long * plOpenState,
        long * pfBuffering,
        long * plBufferingPercent,
        long * plQuality ) = 0;
};

struct __declspec(uuid("9c2263a0-3e3c-11d2-9bd3-204c4f4f5020"))
IRadioServer : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall BindToRadio (
        BSTR wszRadio,
        struct IRadioPlayer * * ppServer ) = 0;
    virtual HRESULT __stdcall IsRadioExists (
        BSTR wszRadio ) = 0;
    virtual HRESULT __stdcall LaunchStandardUrl (
        BSTR bszUrl,
        IUnknown * pBrowser ) = 0;
};

struct __declspec(uuid("8e71888a-423f-11d2-876e-00a0c9082467"))
RadioServer;
    // [ default ] interface IRadioPlayer
    // interface IRadioServerControl
    // interface IMediaPlayerListener
    // [ default, source ] dispinterface _IRadioPlayerEvents

struct __declspec(uuid("8e718889-423f-11d2-876e-00a0c9082467"))
IRadioServerControl : IDispatch
{};

struct __declspec(uuid("33222211-5e5e-11d2-9e8e-0000f8085981"))
IMediaPlayerListener : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall PlayStateChanged (
        long lNewState ) = 0;
    virtual HRESULT __stdcall Buffering (
        VARIANT_BOOL fStart ) = 0;
    virtual HRESULT __stdcall BufferPercent (
        long lBufferPercent ) = 0;
    virtual HRESULT __stdcall OpenStateChanged (
        long lOpenState ) = 0;
    virtual HRESULT __stdcall MediaInfoChanged (
        BSTR bstrShowTitle,
        BSTR bstrClipTitle,
        BSTR bstrClipAuthor,
        BSTR bstrClipCopyright,
        BSTR bstrStationURL ) = 0;
    virtual HRESULT __stdcall QualityChanged (
        long lQuality ) = 0;
    virtual HRESULT __stdcall Error (
        BSTR bstrError ) = 0;
};

struct __declspec(uuid("8e718888-423f-11d2-876e-00a0c9082467"))
RadioBand;
    // dispinterface _IRadioPlayerEvents
    // [ default ] interface IRadioBand

struct __declspec(uuid("8e718881-423f-11d2-876e-00a0c9082467"))
IRadioBand : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Create (
        long * phwnd,
        long hwndParent ) = 0;
};

struct __declspec(uuid("1d1237a0-6cd6-11d2-96ba-00104b242e64"))
ppDSFile;
    // [ default ] interface IUnknown

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_MediaPlayer =
    {0x22d6f304,0xb0f6,0x11d0,{0x94,0xab,0x00,0x80,0xc7,0x4c,0x7e,0x95}};
extern "C" const GUID __declspec(selectany) DIID__IDirectControlEvents =
    {0x39a2c2a7,0x4778,0x11d2,{0x9b,0xdb,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_DirectControl =
    {0x39a2c2a6,0x4778,0x11d2,{0x9b,0xdb,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) IID_IDirectControl =
    {0x39a2c2a5,0x4778,0x11d2,{0x9b,0xdb,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) DIID__IDirectContainerEvents =
    {0x39a2c2aa,0x4778,0x11d2,{0x9b,0xdb,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_DirectContainer =
    {0x39a2c2a9,0x4778,0x11d2,{0x9b,0xdb,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) IID_IDirectContainer =
    {0x39a2c2a8,0x4778,0x11d2,{0x9b,0xdb,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) DIID__IRadioViewEvents =
    {0x847b4df6,0x4b61,0x11d2,{0x9b,0xdb,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_RadioView =
    {0x847b4df5,0x4b61,0x11d2,{0x9b,0xdb,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) IID_IRadioView =
    {0x847b4df4,0x4b61,0x11d2,{0x9b,0xdb,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) DIID__MediaPlayerEvents =
    {0x2d3a4c40,0xe711,0x11d0,{0x94,0xab,0x00,0x80,0xc7,0x4c,0x7e,0x95}};
extern "C" const GUID __declspec(selectany) CLSID_MediaPlayer =
    {0x22d6f312,0xb0f6,0x11d0,{0x94,0xab,0x00,0x80,0xc7,0x4c,0x7e,0x95}};
extern "C" const GUID __declspec(selectany) IID_IMediaPlayer =
    {0x22d6f311,0xb0f6,0x11d0,{0x94,0xab,0x00,0x80,0xc7,0x4c,0x7e,0x95}};
extern "C" const GUID __declspec(selectany) IID_IMediaPlayer2 =
    {0x20d4f5e0,0x5475,0x11d2,{0x97,0x74,0x00,0x00,0xf8,0x08,0x55,0xe6}};
extern "C" const GUID __declspec(selectany) IID_IMediaPlayerDvd =
    {0x746eb440,0x3835,0x11d2,{0x97,0x74,0x00,0x00,0xf8,0x08,0x55,0xe6}};
extern "C" const GUID __declspec(selectany) IID_IMediaBindStream =
    {0x920f0de3,0x91c5,0x11d2,{0x82,0x8f,0x00,0xc0,0x4f,0xc9,0x9d,0x4e}};
extern "C" const GUID __declspec(selectany) CLSID_ppDShowNet =
    {0x5c85dcb0,0xf967,0x11d0,{0x81,0xed,0x00,0xc0,0x4f,0xc9,0x9d,0x4c}};
extern "C" const GUID __declspec(selectany) CLSID_ppDShowPlay =
    {0xc0cd59ae,0x020d,0x11d1,{0x81,0xf2,0x00,0xc0,0x4f,0xc9,0x9d,0x4c}};
extern "C" const GUID __declspec(selectany) CLSID_ppDSMeta =
    {0x2feb9591,0x50cf,0x11d1,{0xa6,0xdf,0x00,0x60,0x97,0xc4,0xe4,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_ppDSCnnl =
    {0xbb314f91,0xa010,0x11d1,{0xa7,0x5a,0x00,0x60,0x97,0xc4,0xe4,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_ppDSClip =
    {0x31c48c31,0x70b0,0x11d1,{0xa7,0x08,0x00,0x60,0x97,0xc4,0xe4,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_ppDSDetl =
    {0x31c48c32,0x70b0,0x11d1,{0xa7,0x08,0x00,0x60,0x97,0xc4,0xe4,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_ppDSApp =
    {0x2afa62e2,0x5548,0x11d1,{0xa6,0xe1,0x00,0x60,0x97,0xc4,0xe4,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_ppDSPropAdv =
    {0x8c4eb103,0x516f,0x11d1,{0xa6,0xdf,0x00,0x60,0x97,0xc4,0xe4,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_ppDSView =
    {0xae1a5812,0x5230,0x11d1,{0xa6,0xe0,0x00,0x60,0x97,0xc4,0xe4,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_ppDSOAdv =
    {0xae1a5813,0x5230,0x11d1,{0xa6,0xe0,0x00,0x60,0x97,0xc4,0xe4,0x76}};
extern "C" const GUID __declspec(selectany) DIID__IAsyncPProtEvents =
    {0x3da2aa3c,0x3d96,0x11d2,{0x9b,0xd2,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_AsyncPProt =
    {0x3da2aa3b,0x3d96,0x11d2,{0x9b,0xd2,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) IID_IAsyncPProt =
    {0x3da2aa3a,0x3d96,0x11d2,{0x9b,0xd2,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_AsyncMHandler =
    {0x3da2aa3e,0x3d96,0x11d2,{0x9b,0xd2,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) IID_IAsyncMHandler =
    {0x3da2aa3d,0x3d96,0x11d2,{0x9b,0xd2,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) DIID__IRadioPlayerEvents =
    {0x9c2263b1,0x3e3c,0x11d2,{0x9b,0xd3,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_RadioPlayer =
    {0x9c2263b0,0x3e3c,0x11d2,{0x9b,0xd3,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) IID_IRadioPlayer =
    {0x9c2263af,0x3e3c,0x11d2,{0x9b,0xd3,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) IID_IRadioServer =
    {0x9c2263a0,0x3e3c,0x11d2,{0x9b,0xd3,0x20,0x4c,0x4f,0x4f,0x50,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_RadioServer =
    {0x8e71888a,0x423f,0x11d2,{0x87,0x6e,0x00,0xa0,0xc9,0x08,0x24,0x67}};
extern "C" const GUID __declspec(selectany) IID_IRadioServerControl =
    {0x8e718889,0x423f,0x11d2,{0x87,0x6e,0x00,0xa0,0xc9,0x08,0x24,0x67}};
extern "C" const GUID __declspec(selectany) IID_IMediaPlayerListener =
    {0x33222211,0x5e5e,0x11d2,{0x9e,0x8e,0x00,0x00,0xf8,0x08,0x59,0x81}};
extern "C" const GUID __declspec(selectany) CLSID_RadioBand =
    {0x8e718888,0x423f,0x11d2,{0x87,0x6e,0x00,0xa0,0xc9,0x08,0x24,0x67}};
extern "C" const GUID __declspec(selectany) IID_IRadioBand =
    {0x8e718881,0x423f,0x11d2,{0x87,0x6e,0x00,0xa0,0xc9,0x08,0x24,0x67}};
extern "C" const GUID __declspec(selectany) CLSID_ppDSFile =
    {0x1d1237a0,0x6cd6,0x11d2,{0x96,0xba,0x00,0x10,0x4b,0x24,0x2e,0x64}};

} // namespace MediaPlayer

#pragma pack(pop)
