音声認識エンジン julius をハックして遊ぼう。
julius「マナの本当の力を思い知れ!!」

=========================================================
juliustest__mkdfa
=========================================================
mkdfa.pl ではなく、直接 dfa と dict ファイルを生成します。
mkdfa.pl の内容と dfaコンパイラ mkfa と 最適化ツール dfa_minimize をくっつけてみました。
perl を使わず共に、 grammar voca から dfa  dict を作り出せます。

実行すると、 fruit.dfa などのファイルを生成します。
テンポラリファイルをあえて消していないので、変換途中に作る作業用のファイルも見れます。
juliusって逆順のオートマトンを作らないといけなくて、その途中経過が見れるので面白いと思います。

が、
VC++の検出ツールにかけてみると、mkfa のソースに大量のメモリリークがあるようですw
dfa_minimize にもありました。

出来る範囲で修正しておきましたが、 mkfa のリークは結構深刻な部分で発生していて、直すには時間がかかりそうです。
また、mkfa の内部では static 変数を使いまくっているので、関数化したとしても、2度目は上手く動作しません。

以上の理由により、プロジェクトは凍結しました。



=========================================================
juliustest__regexp
=========================================================
正規表現で、 dfa voca を作り出します。
julius の  grammar voca は作るのが一苦労です。
やはり、 "テスト(なのは|さくら)たん" とかと、正規表現で書きたいですよね？
正規表現から、直接 dfa と voca ファイルを生成してみることにしました。

生成される dfa はチューニングされていないので注意してください。
将来的に、regexp assemble でも移植してけようとか考えています。

実行すると、 regexp_test.dfa regexp_test.dict を生成します。
直接 julius で使える dfa と dict 生成するので、
grammer や voca などの中間ファイル入りませんし、dfaコンパイルも不要です。


=========================================================
juliustest__plus_preview
=========================================================
正規表現でルールがかけて、且つ、julius の不思議なスコア計算をそれっぽい形に整形して表示します。
このプログラムには、 julius も組み込まれているため、このプログラム単体で、ルールの記述から認識までなんでもできます。
まだ、作り込みが甘いんですけども。

問題点: julius は後ろからマッチさせていくので、先頭の単語がなくてもマッチしてしまう時がある。
そして、その時に、確率を下げるようにフィルタが作れていない。
たぶん、waveファイルから先頭部分を抜いて、再度マッチさせるような、SAPIでやっているディクテーションフィルターのような
仕組みを作らないと、これはどうしようもないと思います。

先頭の部分は、「コンピュータ」などの呼びかけの部分であり、常時稼動する音声認識システムでは、
この呼びかけを確実に捉えることが誤認識対策として必須になるので、何とかしないといけないところですね。

=========================================================
juliustest
=========================================================
windowsではとりあえずの完成です。
呼びかけを再チェックする仕組みなどを julius で実装しています。
認識精度向上になっています。
次の julius-4.2.1 に続きます。

=========================================================
julius-4.2.1
=========================================================
julius-4.2.1 に julius-plus を組み込んだものです。
ソースコードの文字コードのエンコーディングが問題なんですが、一応、windowsでも linux でも動作します。
クロスプラットフォームです。

windows
VS2010 で julius-4.2.1\msvc\julius-plus.sln を開いてください。


linux
sudo apt-get install flex g++ 'libboost*-dev' libboost-thread-dev binutils-dev  libboost-system-dev libasound2-dev

./configure --with-mictype=alsa
make

cd julius-plus
make

./julius-plus
