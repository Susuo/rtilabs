音声認識エンジン julius をハックして遊ぼう。
julius「マナの本当の力を思い知れ!!」




= juliustest__mkdfa =
mkdfa.pl ではなく、直接 dfa と dict ファイルを生成します。
mkdfa.pl の内容と dfaコンパイラ mkfa と 最適化ツール dfa_minimize をくっつけてみました。
perl を使わず共に、 grammar voca から dfa  dict を作り出せます。

が、
VC++の検出ツールにかけてみると、mkfa のソースに大量のメモリリークがあるようですw
dfa_minimize にもありました。

出来る範囲で修正しておきましたが、 mkfa のリークは結構深刻な部分で発生していて、直すには時間がかかりそうです。
また、mkfa の内部では static 変数を使いまくっているので、関数化したとしても、2度目は上手く動作しません。

以上の理由により、プロジェクトは凍結しました。



= juliustest__regexp =
正規表現で、 dfa voca を作り出します。
julius の  grammar voca は作るのが一苦労です。
やっぱり、 "テスト(なのは|さくら)たん" とかと、正規表現で書きたいですよね？
正規表現から、直接 dfa と voca ファイルを生成してみることにしました。

生成される dfa はチューニングされていないので注意してください。
将来的に、regexp assemble でも移植して作っつけようとか考えています。
